<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:shared="clr-namespace:WpfApp1.Resources.Style.Controls"
    mc:Ignorable="d">
   <!-- xmlns:test1="clr-namespace:WpfApp1.Converter" -->
    <shared:AddConverter x:Key="AddConverter" />

    <!--  Separator  -->
    <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">
        <Setter Property="Height" Value="0.7" />
        <Setter Property="Margin" Value="30,2,2,2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Border BorderBrush="{DynamicResource Environment.CommandBarMenuSeparator}" BorderThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  TopLevelHeader  -->
    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
        <StackPanel>
            <!--  BorderThickness="0.7,0.7,0.7,0">  -->
            <!--<Grid>-->
            <Border
                x:Name="Border"
                BorderThickness="0.7,0.7,0.7,0"
                SnapsToDevicePixels="False">
                <ContentPresenter
                    Margin="6,3,6,3"
                    ContentSource="Header"
                    RecognizesAccessKey="True" />
            </Border>
            <Popup
                x:Name="Popup"
                AllowsTransparency="True"
                Focusable="False"
                IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                Placement="Bottom"
                SnapsToDevicePixels="False"
                VerticalOffset="-0.7">
                <StackPanel x:Name="Paneltest">
                    <Rectangle
                        x:Name="HidingBorder"
                        Width="{Binding Path=ActualWidth, ElementName=Border, Converter={StaticResource AddConverter}, ConverterParameter='-1.4'}"
                        Height="3"
                        Margin="0.7,-2,0,-2"
                        HorizontalAlignment="Left"
                        Panel.ZIndex="5"
                        Fill="{DynamicResource Environment.CommandBarMenuBackground}" />

                    <Border
                        x:Name="Edge"
                        Margin="0,0,4,4"
                        Padding="0.7,0.7,0.7,0.7"
                        Panel.ZIndex="1"
                        Background="{DynamicResource Environment.CommandBarMenuBorder}">

                        <Border.Effect>
                            <DropShadowEffect BlurRadius="5" Opacity="0.4" />
                        </Border.Effect>


                        <Border
                            x:Name="SubMenuBorder"
                            Padding="3"
                            Background="{DynamicResource Environment.CommandBarMenuBackground}"
                            BorderThickness="0"
                            SnapsToDevicePixels="False">

                            <ScrollViewer
                                x:Name="SubMenuScrollViewer"
                                d:DesignUseLayoutRounding="True"
                                Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer,
                                                                              TypeInTargetAssembly={x:Type FrameworkElement}}}"
                                UseLayoutRounding="True">
                                <Grid
                                    x:Name="Grid1"
                                    d:DesignUseLayoutRounding="True"
                                    RenderOptions.ClearTypeHint="Enabled"
                                    UseLayoutRounding="True">
                                    <Canvas
                                        x:Name="Canvas"
                                        Width="0"
                                        Height="0"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Center"
                                        d:DesignUseLayoutRounding="True"
                                        UseLayoutRounding="True">
                                        <Rectangle
                                            x:Name="OpaqueRect"
                                            Width="Auto"
                                            Height="Auto"
                                            d:DesignUseLayoutRounding="True"
                                            Fill="{Binding Background, ElementName=SubMenuBorder}"
                                            UseLayoutRounding="True" />
                                    </Canvas>
                                    <ItemsPresenter
                                        x:Name="ItemsPresenter"
                                        d:DesignUseLayoutRounding="True"
                                        Grid.IsSharedSizeScope="True"
                                        KeyboardNavigation.DirectionalNavigation="Cycle"
                                        KeyboardNavigation.TabNavigation="Cycle"
                                        SnapsToDevicePixels="False"
                                        UseLayoutRounding="True" />
                                </Grid>
                            </ScrollViewer>
                        </Border>

                    </Border>

                </StackPanel>
            </Popup>
            <!--</Grid>-->
        </StackPanel>

        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                <Setter TargetName="Popup" Property="PopupAnimation" Value="None" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource Environment.CommandBarMouseOverBackground}" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="False">
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource Environment.CommandBarBackground}" />
            </Trigger>
            <DataTrigger Binding="{Binding IsOpen, ElementName=Popup}" Value="True">
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource Environment.CommandBarMenuBackground}" />
                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource Environment.CommandBarMenuBorder}" />
            </DataTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource Environment.CommandBarTextInactive}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  TopLevelItem  -->
    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border x:Name="Border">
            <Grid>
                <ContentPresenter
                    Margin="6,3,6,3"
                    ContentSource="Header"
                    RecognizesAccessKey="True" />
            </Grid>
        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource Environment.CommandBarMenuItemMouseOver}" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="False">
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource Environment.CommandBarMenuBackground}" />
            </Trigger>
            <DataTrigger Binding="{Binding IsOpen, ElementName=Popup}" Value="True">
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource Environment.CommandBarMenuBackground}" />
            </DataTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource Environment.CommandBarTextInactive}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  SubmenuItem  -->
    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border
            x:Name="Border"
            Height="25"
            Margin="0,-1,1,-1"
            Background="{DynamicResource Environment.CommandBarMenuBackground}"
            BorderThickness="0">

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition
                        Width="Auto"
                        MinWidth="30"
                        SharedSizeGroup="Icon" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" />
                    <ColumnDefinition Width="13" />
                </Grid.ColumnDefinitions>

                <ContentPresenter
                    x:Name="Icon"
                    Grid.Column="0"
                    Margin="6,0,6,0"
                    VerticalAlignment="Center"
                    ContentSource="Icon" />

                <Border
                    x:Name="Check"
                    Grid.Column="0"
                    Width="18"
                    Height="18"
                    Margin="0,0,0,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Background="{DynamicResource Environment.CommandBarCheckBox}"
                    Visibility="Collapsed">

                    <ContentControl Margin="0" ContentTemplate="{DynamicResource CheckmarkIcon}" />

                </Border>
                <ContentPresenter
                    x:Name="HeaderHost"
                    Grid.Column="1"
                    Margin="6,3,6,3"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Center"
                    ContentSource="Header"
                    ContentTemplate="{TemplateBinding HeaderTemplate}"
                    RecognizesAccessKey="True" />

                <TextBlock
                    x:Name="InputGestureText"
                    Grid.Column="2"
                    MinWidth="30"
                    Margin="5,2,0,2"
                    VerticalAlignment="Center"
                    DockPanel.Dock="Right"
                    FontSize="{Binding HeaderHost.FontSize}"
                    Text="{TemplateBinding InputGestureText}" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="ButtonBase.Command" Value="{x:Null}" />
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Hidden" />
            </Trigger>

            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="Check" Property="Visibility" Value="Visible" />
            </Trigger>

            <Trigger Property="IsCheckable" Value="true">
                <Setter TargetName="Icon" Property="Visibility" Value="Hidden" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource Environment.CommandBarMenuItemMouseOver}" />
                <Setter TargetName="Check" Property="Background" Value="{DynamicResource Environment.CommandBarCheckBoxMouseOver}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource Environment.CommandBarTextInactive}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border
            x:Name="Border"
            MaxHeight="28"
            Margin="-1,-1,1,-1"
            Background="{DynamicResource Environment.CommandBarMenuBackground}"
            BorderThickness="0">

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition
                        Width="Auto"
                        MinWidth="30"
                        SharedSizeGroup="Icon" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" />
                    <ColumnDefinition Width="13" />
                </Grid.ColumnDefinitions>
                <ContentPresenter
                    x:Name="Icon"
                    Grid.Column="0"
                    Margin="6,0,6,0"
                    VerticalAlignment="Center"
                    ContentSource="Icon" />

                <ContentPresenter
                    x:Name="HeaderHost"
                    Grid.Column="1"
                    Margin="6,3,6,3"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Center"
                    ContentSource="Header"
                    ContentTemplate="{TemplateBinding HeaderTemplate}"
                    RecognizesAccessKey="True" />

                <TextBlock
                    x:Name="InputGestureText"
                    Grid.Column="2"
                    MinWidth="30"
                    Margin="5,2,0,2"
                    DockPanel.Dock="Right"
                    Text="{TemplateBinding InputGestureText}" />

                <Path
                    x:Name="Arrow"
                    Grid.Column="3"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Data="M 0 0 L 0 7 L 4 3.5 Z"
                    Fill="{DynamicResource Environment.CommandBarMenuSubmenuGlyph}" />

                <Popup
                    x:Name="Popup"
                    AllowsTransparency="True"
                    Focusable="False"
                    HorizontalOffset="-3"
                    IsOpen="{TemplateBinding IsSubmenuOpen}"
                    Placement="Right">

                    <Border
                        x:Name="Edge"
                        Margin="0,0,4,4"
                        Padding="1,1,1,1"
                        Background="{DynamicResource Environment.CommandBarMenuBorder}">

                        <Border.Effect>
                            <DropShadowEffect BlurRadius="5" Opacity="0.4" />
                        </Border.Effect>

                        <Border
                            x:Name="SubmenuBorder"
                            Padding="3"
                            Background="{DynamicResource Environment.CommandBarMenuBackground}"
                            BorderThickness="0"
                            SnapsToDevicePixels="False">

                            <ScrollViewer
                                x:Name="SubMenuScrollViewer"
                                d:DesignUseLayoutRounding="True"
                                Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer,
                                                                              TypeInTargetAssembly={x:Type FrameworkElement}}}"
                                UseLayoutRounding="True">

                                <Grid
                                    x:Name="Grid1"
                                    d:DesignUseLayoutRounding="True"
                                    RenderOptions.ClearTypeHint="Enabled"
                                    UseLayoutRounding="True">
                                    <Canvas
                                        x:Name="Canvas"
                                        Width="0"
                                        Height="0"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Center"
                                        d:DesignUseLayoutRounding="True"
                                        UseLayoutRounding="True">

                                        <Rectangle
                                            x:Name="OpaqueRect"
                                            Width="Auto"
                                            Height="Auto"
                                            d:DesignUseLayoutRounding="True"
                                            Fill="{Binding Background, ElementName=SubMenuBorder}"
                                            UseLayoutRounding="True" />
                                    </Canvas>
                                    <ItemsPresenter
                                        x:Name="ItemsPresenter"
                                        d:DesignUseLayoutRounding="True"
                                        Grid.IsSharedSizeScope="True"
                                        KeyboardNavigation.DirectionalNavigation="Cycle"
                                        KeyboardNavigation.TabNavigation="Cycle"
                                        SnapsToDevicePixels="False"
                                        UseLayoutRounding="True" />
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource Environment.CommandBarMenuItemMouseOver}" />
                <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource Environment.CommandBarMenuMouseOverSubmenuGlyph}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource Environment.CommandBarTextInactive}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  MenuItem Style  -->
    <Style x:Key="{x:Type MenuItem}" TargetType="{x:Type MenuItem}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}" />
                <Setter Property="Grid.IsSharedSizeScope" Value="true" />
            </Trigger>
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}" />
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}" />
            </Trigger>
            <Trigger Property="Role" Value="SubmenuItem">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}" />
            </Trigger>
        </Style.Triggers>
    </Style>



</ResourceDictionary>